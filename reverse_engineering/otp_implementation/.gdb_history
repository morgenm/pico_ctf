pwndbg
./otp
run ./otp
exit
quit
context
b main
r
disas main
b *0x00005555554009bd
c
python print("a"*100)
r aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
info b
cwa
contextwatch %rdi
contextwatch %rdiwadaw
q
b main
r
python print("a"*100)
r aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
disas main
b *0x00005555554009bd
c
x 0x7fffffffe5e0
x/s 0x7fffffffe5e0
python
import gdb
scrambled = gdb.execute("x/s 0x7fffffffe5e0")
end
print(scrambled)
python print(scrambled)
python
import gdb
scrambled = gdb.execute("x/s 0x7fffffffe5e0")
print(scrambled)
end
python
import gdb
scrambled = gdb.execute("x/s 0x7fffffffe5e0", to_string=True)
print(scrambled)
end
python
import gdb
# Get first char
import string
for c in string.ascii_lowercase:
print(c)
end
python
import string
for c in string.ascii_lowercase:
    print(c)
end
python
import string
for c in string.ascii_lowercase:
    arg = c*1000
end
python
import gdb
import string
for c in string.ascii_lowercase:
    arg = c*100
    gdb.execute("r {}".format(arg))
end
python
import gdb
import string
    arg = c*100
end
python
import gdb
import string
for c in string.ascii_lowercase:
    arg = c*100
    gdb.execute("r {}".format(arg))
    gdb.execute("c")
    scrambled = gdb.execute("x/s 0x7fffffffe5e0", to_string=True)
    if(scrambled.split(")[1][0] == 'm'):
        print(c)
        break
end
python
import python_debug.py
end
python import sys;print(sys.path)
python sys.path.extend("/home/morgen/Documents/Projects/pico/reverse_engineering/otp_implementation")
python import python_debug
exit
quit
q
q
q
q
q
q
python --help
source python_debug.py 
python import python_debug
python r
p run
python_debug
dbg
quit
b main
python import python_debug
python dbg(
python dbg()
python python_debug.dbg()
r
disas main
q
b main
disas main
b *0x00000000000009bd
python import python_debug
python print("a"*100)
r aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
c
info breakpoints 
quit
b main
r
disas main
b *0x00005555554009bd
python import python_debug
python print("a"*100)
r aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
c
python python_debug.dbg("0x7fffffffe530")
python import python_debug
python python_debug.dbg("0x7fffffffe530")
python import python_debug
python python_debug.dbg("0x7fffffffe530")
q
b main
r
disas main
b *0x00005555554009bd
r
python print("a"*100)
r aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
c
python python_debug.dbg(0x7fffffffe530)
python import python_debug
python python_debug.dbg(0x7fffffffe530)
